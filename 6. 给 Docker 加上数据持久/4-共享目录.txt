共享目录(bind volume)


除了挂载数据卷外, Docker 还可以挂载共享目录(这一点和虚拟机一样)
共享目录的优势是使用方便, 易于理解, 可以在某些场景下很方便的使用
(比如开发时在宿主机中修改源代码 Docker 中实时生效省却了 build 镜像的过程)


下面用一个具体的例子来演示挂载共享目录的用法
下面的命令会从 nginx 镜像运行一个名为 nginx1 的容器
并且设置了 8080:80 的端口映射
--mount 参数的 type=bind 表示要挂载共享目录

把宿主机的当前目录映射为容器的 /usr/share/nginx/html
(这是 nginx 容器的静态页面文件存放路径)
这样在宿主机中访问 localhost:8080 会自动访问宿主机当前目录下的 index.html 文件
(这是 nginx 的默认静态文件首页)

# 因为这一行命令比较长, 所以用到了折行符号 \
docker run -p 8080:80 \
    --name nginx1 \
    --mount type=bind,source="${PWD}",target=/usr/share/nginx/html/ \
    nginx

需要注意的是 source 参数必须使用绝对路径
所以这里使用 "${PWD}" 的方式来在 Mac/Linux/Windows 中获取当前目录路径
这是一个可以在多平台通用的获取当前目录路径的方法(Windows 下必须使用 PowerShell)
加引号是因为路径中可能含有空格等特殊符号, 如果路径有空格而未加引号, 会产生错误
